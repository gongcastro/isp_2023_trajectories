---
title: Cognateness, frequency, and vocabulary size
subtitle: An interactive account of bilingual lexical acquisition
footer: |
    International Symposium of Psycholinguistics | Vitoria, 31st May, 2023
format:
  revealjs:
    show-slide-number: all
    theme: assets/style.scss
    css: assets/style.css
    logo: images/logo-upf.png
    transition: slide
    background-transition: fade
    transition-speed: fast
    embed-resources: true
    slide-number: true
    html-math-method: katex
    template-partials:
      - assets/title-slide.html
author:
  - name: "Gonzalo<br>Garcia-Castro"
    orcid: 0000-0002-8553-4209
    twitter: gongcastro
  - name: "Daniela S.<br>Ávila-Varela"
    orcid: 0000-0002-3518-8117
  - name: "Ignacio<br>Castillejo"
    orcid: 0000-0001-7445-0416
    twitter: indalonacho
  - name: "Núria<br>Sebastian-Galles"
    orcid: 0000-0001-6938-2498
bibliography: assets/references.bib
echo: false
warning: false
fig-dpi: 100
scrollable: true
---

```{r setup}
#| label: setup
set.seed(888)

library(tidyverse)
library(patchwork)
library(ggdist)
library(ggtext)
library(distributional)
library(here)
library(kableExtra)

file_paths <- list.files(here("R"),
                         pattern = ".R$",
                         full.names = TRUE)

invisible(lapply(file_paths, source))

items <- readRDS(here("data", "items.rds"))
participants <- readRDS(here("data", "participants.rds"))
responses <- readRDS(here("data", "responses.rds"))
post_summary <- read_csv(here("results", "posterior_summary.csv"))
post_draws <- read_csv(here("results", "posterior_draws.csv"))
post_epreds <- read_csv(here("results", "predictions.csv"))

theme_set(theme_ggdist())

clrs <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")


options(ggplot2.ordinal.fill = clrs,
        ggplot2.ordinal.colour = clrs,
        ggplot2.discrete.fill = clrs,
        ggplot2.discrete.colour = clrs,
        ggplot2.continuous.fill = scale_color_gradient,
        ggplot2.continuous.colour = scale_color_gradient,
        knitr.graphics.error = FALSE) 
```

## Bilingual word acquisition

<br>

::: {.incremental}

Word acquisition starts around **6 months** of age [@jusczyk1995infants; @tincoff1999beginnings; @bergelson2012months]

Word-learning involves the (challenging) task of **associating a word-form to its referential context** (ambiguous, variable)

**Bilinguals** face the challenge of learning more than one word-form per referent

Bilinguals keep up with their monolinguals: how?

:::

## Learning outputs: measuring vocabulary size

::: columns

:::: {.column width="40%"}

**Vocabulary checklist**: number/proportion of words checked by caregivers as `Understands`, and/or `Says`

::::

:::: {.column width="60%"}

|      | Understands   | Understands & Says   |
|:-----|:-------------:|:--------------------:|
|chair | [  ]          | [  ]                 |
|table | [  ]          | [  ]                 |
| ...  | [  ]          | [  ]                 |

::::

:::

<br>

English-Spanish bilinguals have **smaller English vocabulary sizes**, compared to monolinguals, but **similar vocabulary sizes when both language are summed together** [@hoff2012dual]

## Linguistic distance

<br>

Bilingual toddlers learning two **typologically close languages** showed larger vocabulary sizes [@floccia2018introduction]

::: goal

**Cognate**: form-similar translation equivalents (TEs)

| *Cognate*           | *Non-cognate*       |
|:-------------------:|:-------------------:|
| [cat] /ˈgat-ˈgato/  | [dog] /ˈgos-ˈpe.ro/ |

:::

Bilinguals acquire TEs from early steps of vocabulary growth [@bilson2015semantic; @tsui2022are]

Cognateness facilitates vocabulary growth? **Mechanisms?**

## Parallel activation: candidate mechanism?

::: columns

:::: {.column width="50%"}

::::: goal

Lexical access is **language non-selective**:

Translation equivalents are co-activated, even in monolingual situations

:::::


```{r parallel}
#| label: parallel
#| echo: false
#| warning: false
#| fig-width: 5
#| fig-height: 2
#| out-width: 100%
#| out-height: 100%
tibble(x = c(-1, 1),
       y = c(0, 0),
       language = c("L1", "L2")) |> 
    ggplot(aes(x, y,
               label = language,
               fill = language,
               colour = language)) +
    annotate(geom = "segment",
             x = -0.40,
             xend = 0.40,
             y = 0,
             yend = 0,
             arrow = arrow(ends = "both", 
                           type = "closed"),
             colour = "grey",
             size = 2) +
    geom_point(size = 50,
               shape = 21,
               stroke = 3,
               alpha = 3/4) +
    geom_point(size = 50,
               shape = 21,
               fill = NA,
               stroke = 3) +
    geom_text(colour = "black",
              size = 7) +
    annotate(geom = "text",
             label = "Phonology",
             x = 0,
             y = 0.1,
             hjust = 0.5,
             vjust = 0,
             size = 6) +
    scale_fill_manual(values = c(clrs[1], clrs[4])) +
    scale_colour_manual(values = c(clrs[1], clrs[4])) +
    scale_x_continuous(limits = c(-1.5, 1.5)) +
    scale_y_continuous(limits = c(-1 , 1)) +
    theme_void() +
    theme(legend.position = "none")
```
::::

:::: {.column width="50%"}

Cognates are acquired earlier than non-cognates [@mitchell2022cognates; @bosch2014first]

<br>

**Dissociation** between models of bilingual word processing (parallel activation) and word acquisition

::::

:::

# Simulating word acquisition {background-color="#f0f2f0"}

## Accumulator models

<br>

Word acquisition as a continuous process of lexical consolidation [@hidaka2013computational; @mollica2017how]

![](images/accumulator-diagram.png){width=14in, fig-align=center}

---

<br>

For participant **$i$** and word **$j$**:

::: info-box

$$
\begin{aligned}
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \\
\text{Frequency}_j &\sim \text{Poisson}(\lambda)
\end{aligned}
$$

$$
\begin{aligned}
\text{Age of acquisition}_{ij} &= \text{minimize}(|\text{Threshold}_{ij}-\text{Learning instances}_{ij}|) 
\end{aligned}
$$

:::

::: columns

:::: {.column width="40%"}

We fix some parameters:

$$
\begin{aligned}
\text{Threshold} &= 300 \\ 
\lambda &= 50
\end{aligned}
$$

::::

:::: {.column width="60%"}

```{r poisson-1}
#| label: poisson-1
#| out-width: 120%
#| out-height: 100%
#| fig-width: 4
#| fig-height: 1.75
data.frame(lambda = 50) %>%
    ggplot(aes(xdist = dist_poisson(lambda))) +
    stat_histinterval(point_interval = NULL,
                      slab_colour = "white",
                      outline_bars = TRUE,
                      fill = "grey50") +
    coord_cartesian(expand = FALSE) +
    labs(title = "Frequency (Poisson distribution)",
         x = "Learning instances per month",
         y = NULL) +
    scale_x_continuous(breaks = seq(0, 100, 10)) +
    theme_ggdist() +
    theme(axis.text.y = element_blank())
```

::::

:::


# Generating predictions (simulated data){background-color="#58508d"}

## Monolingual (no parallel activation)


| Catalan | Spanish |
|:-------:|:-------:|
| 100%    | 0%      |



```{r eli}
#| label: eli-monolingual
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center

threshold <- 300

# no parallel activation
eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 1,
    parallel_beta = 0,
    conditions = c(
        glue::glue("**Cognate**: /<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate**: /<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H0") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H0")
# 
# img <- c(cat = "images/diagram_cat.png",
#          dog = "images/diagram_dog.png") |>
#     map(magick::image_read) |>
#     map(\(x) magick::image_ggplot(x, interpolate = FALSE))

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "top", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))

```




## Including learning instances from **parallel activation**

::: columns

:::: {.column width="50%"}

![](images/diagram_cat.png)

::::

:::: {.column width="50%"}

![](images/diagram_dog.png)

::::

:::

$$
\begin{aligned}
\text{Learning instances}_{ij} &= Age_i \cdot Frequency_j + \\
&(Similarity_j \cdot \text{Learning instances}_{ij'})
\end{aligned}
$$

## Bilingual (no parallel activation)


| Catalan | Spanish |
|:-------:|:-------:|
| 60%     | 40%     |


```{r eli}
#| label: eli-bilingual-h0
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
threshold <- 300

eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 0,
    conditions = c(
        glue::glue("**Cognate** (75% similarity)<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate** (0% similarity)<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H1")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "top", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```


## Bilingual (parallel activation)


| Catalan | Spanish |
|:-------:|:-------:|
| 60%     | 40%     |


```{r eli}
#| label: eli-bilingual-h1
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
threshold <- 300

eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 1,
    conditions = c(
        glue::glue("**Cognate** (75% similarity)<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate** (0% similarity)<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H1")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "top", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

# Testing predictions (observed data){background-color="#ffa600"}

## Questionnaire

::: columns

:::: {.column width="75%"}


**Barcelona Vocabulary Questionnaire (BVQ)** 

- On-line, implemented in formr [@arslan2020formr]
- Inspired in MacArthur-Bates CDI [@fenson1994variability]
- ~1,600 items/words (800 Catalan + 800 Spanish)

::::

:::: {.column width="25%"}

<a href="https://gongcastro.github.io/bvq"><img src="images/logo.png" align="center" height="250" fig-align="center"/></a>

::::

:::

Participants filled one of four versions of the questionnaire:
    - 500 items: 250 Catalan + 250 Spanish

Short-listed (nouns): `r length(unique(items$te))` translation equivalents (TE)

## Participants

```{r longitudinal}
lpar <- participants |> 
    count(id, name = "times") |> 
    count(times)
```

::: columns

:::: {.column width=40%}

**`r format(nrow(distinct(responses)), big.mark = ",")` item responses** from **`r nrow(distinct(responses, id))` participants**

::::

:::: {.column width=60%}


| 1 time      | 2 times     | 3 times     | 4 times     |
|:-----------:|:-----------:|:-----------:|:-----------:|
|`r lpar$n[1]`|`r lpar$n[2]`|`r lpar$n[3]`|`r lpar$n[4]`|

::::

:::

<br>

```{r participants-age}
#| label: participants-age
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 3.5
#| out-width: 100%
participants %>% 
    mutate(age = floor(age)) %>% 
    count(age) %>% 
    ggplot() +
    aes(x = age, y = n) +
    geom_col(fill = "grey70") +
    geom_text(aes(label = n), size = 3.5, vjust = -1) +
    labs(
        x = "Age (months)",
        y = "# participants"
    ) +
    scale_x_continuous(breaks = seq(0, 40, 2)) +
    scale_y_continuous(limits = c(0, 55), breaks = seq(0, 55, 10)) +
    theme(
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank()
    ) +
    
    participants %>% 
    mutate(across(starts_with("doe_"), 
                  \(x) cut(x, seq(0, 1, 0.1), include.lowest = TRUE))) |>
    count(doe_catalan) |> 
    ggplot() +
    aes(x = doe_catalan, y = n) +
    geom_col(fill = "grey70") +
    geom_text(aes(label = n), size = 3.5, vjust = -1) +
    labs(x = "Catalan exposure",
        y = "# participants") +
    guides(x = guide_axis(n.dodge = 2)) +
    theme(
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title.y = element_blank()
    ) +
    
    plot_layout(ncol = 2, widths = c(0.55, 0.45))
```

## Data analysis

### Model structure

<br>

**Ordinal** regression model: $P(Understands)$, $P(Says)$

- *No* < *Understands* < *Understands and Says*

**Multilevel**: Crossed-random effects

- *Participant* and *Translation equivalent* as grouping variables

**Bayesian**: probability of parameter values

$$P(\text{model} | \text{data}) \propto P(\text{data} | \text{model}) \times P(\text{model})$$


---

### Predictors


| Predictor | Example       |
|:----------|:--------------|
| Age       | Months      |
|Length     |Number of phonemes |
|Exposure   | Lexical frequency $\times$ Language exposure |
|Cognateness|Levenshtein similarity between a word-form and its translation|
|Two-way and three-way interactions between age, exposure, and cognateness|


# Results {background-color="#f0f2f0"}

## Posterior distribution

```{r regression-coefs}
#| fig-width: 10
#| out-width: 100%
post_summary |>
    mutate(across(.median:.upper,
                  \(x) ifelse(grepl("Intercept", .type), 
                              plogis(x),
                              x/4)),
           hdi = paste0("[", round(.lower, 2), ", ", round(.upper, 2), "]")) |> 
    select(.variable_name, .median, hdi, .rope_overlap) |> 
    knitr::kable(
        col.names = c("Predictor",
                      "Estimate",
                      "95% HDI", 
                      "p(H0)"),
        booktabs = TRUE,
        digits = 3, 
        html_font = "DM+Sans") |> 
    row_spec(9, background = clrs[5],
             hline_after = FALSE) |> 
    row_spec(1:10, font_size = 27) |> 
    pack_rows("Intercepts", 1, 2)  |> 
    pack_rows("Slopes", 3, 10) 
```

## Posterior predictions

```{r predictions}
#| label: predictions-high
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
clrs_reorder <- c("#58508d", "#003f5c", "#122A36", "#ffa600", "#ff6361", "#bc5090")

post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    geom_rect(aes(fill = ifelse(exposure=="High exposure (+1 SD)", TRUE, FALSE),
                  xmin = -Inf,
                  xmax = Inf,
                  ymin = -Inf,
                  ymax = Inf),
              show.legend = FALSE,
              colour = "white") +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_fill_manual(values = c("white", "transparent")) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```

---

## Posterior predictions

```{r predictions}
#| label: predictions-mean
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
clrs_reorder <- c("#58508d", "#003f5c", "#122A36", "#ffa600", "#ff6361", "#bc5090")

post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    geom_rect(aes(fill = ifelse(exposure=="Low exposure (-1 SD)", FALSE, TRUE),
                  xmin = -Inf,
                  xmax = Inf,
                  ymin = -Inf,
                  ymax = Inf),
              show.legend = FALSE,
              colour = "white") +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_fill_manual(values = c("white", "transparent")) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```

---

## Posterior predictions

```{r predictions}
#| label: predictions-low
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```


# Discussion {background-color="#58508d"}

::: {.incremental}

* **Cognateness facilitates word acquisition**
* Only **low-exposure** words benefit from their cognate status: less dominant language receives more facilitation
* **Parallel activation** as mechanism that boosts lexical consolidation: increment in **cumulative learning instances**
* Catalan-Spanish: very specific population
* Next steps: word-learning, formalisation

:::

## Appendix

### Item properties

```{r items}
#| label: items
#| out-width: 100%
#| fig-width: 8
#| fig-height: 2
items |> 
    count(language, n_phon) |> 
    ggplot(aes(n_phon, n,
               fill = language)) +
    geom_col(position = position_dodge()) +
    labs(title = "Number of phonemes",
         fill = "Language") +
    
    items |> 
    count(language, n_syll) |> 
    ggplot(aes(n_syll, n,
               fill = language)) +
    geom_col(position = position_dodge(),
             show.legend = FALSE) +
    labs(title = "Number of syllables",
         fill = "Language") +
    
    items |> 
    ggplot(aes(freq)) +
    stat_slab(show.legend = FALSE,
              fill = "grey60",
              colour = "white") +
    labs(title = "Lexical frequency",
         fill = "Language") +
    
    
    items |>
    distinct(te, lv) |> 
    ggplot(aes(lv)) +
    stat_slab(fill = "grey60",
              colour = "white") +
    labs(title = "Phonological similarity",
         fill = "Language") +
    
    
    plot_layout(nrow = 2, guides = "keep") &
    scale_fill_manual(values = clrs[c(1, 4)]) &
    theme(legend.position = "top",
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank())
```

## Levenshtein similarity

### Phonological similarity {.smaller}

**Levenshtein distance**: number of edits for two character strings to become identical

|         	| Orthography 	| Phonology 	| String 	|
|---------	|-------------	|-----------	|--------	|
| Catalan 	| *porta*      	| /ˈpɔɾ.tə/    	| `pɔɾtə`  	|
| Spanish 	| *puerta*     	| /ˈpweɾ.ta/   	| `pweɾta` 	|

## Levenshtein similarity

$$
1-\frac{lev(A, B)}{Max(length(A), length(B))}
$$
<br> 

| Catalan 	              | Spanish   	            | Levenshtein 	    |       
|---------	              |---------	            |-----	            |
| porta (/ˈpɔɾ.tə/)  	  | puerta (/ˈpweɾ.ta/)     |   0.50 (3)  	    |
| taula (/ˈtaw.lə/)       | mesa* (/ˈmesa/)         |   0.00 (5)    	|
| cotxe (/ˈkɔ.t͡ʃə/)	  | coche (/ˈkot͡ʃe/)  	    |  0.40 (3)  	    | 
| ...     	              | ...     	            | ... 	            |

## Thank you 

## References

::: {#refs}
:::


