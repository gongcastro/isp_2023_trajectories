---
title: Cognateness, frequency, and vocabulary size
subtitle: An interactive account of bilingual lexical acquisition
footer: |
    International Symposium of Psycholinguistics | Vitoria, 31st May, 2023
format:
  revealjs:
    show-slide-number: all
    theme: assets/style.scss
    css: assets/style.css
    logo: images/logo-upf.png
    github: gongcastro/isp_2023_trajectories
    twitter: gongcastro
    transition: slide
    transition-speed: fast
    embed-resources: true
    slide-number: true
    html-math-method: katex
    template-partials:
      - assets/title-slide.html
author:
  - name: "Gonzalo<br>Garcia-Castro"
    institute: "Universitat Pompeu Fabra"
    orcid: 0000-0002-8553-4209
    metadata:
      twitter: "gongcastro"
  - name: "Daniela S.<br>Ávila-Varela"
    institute: "Universidade de Lisboa"
    orcid: 0000-0002-3518-8117
  - name: "Ignacio<br>Castillejo"
    orcid: 0000-0001-7445-0416
    institute: "Universidad Autónoma de Madrid"
  - name: "Núria<br>Sebastian-Galles"
    orcid: 0000-0001-6938-2498
    institute: "Universitat Pompeu Fabra"
bibliography: assets/references.bib
echo: false
warning: false
fig-dpi: 800
scrollable: true
---

```{r setup}
#| label: setup
set.seed(888)

library(tidyverse)
library(patchwork)
library(ggdist)
library(ggtext)
library(distributional)
library(here)
library(kableExtra)

file_paths <- list.files(here("R"), 
                         pattern = ".R$",
                         full.names = TRUE)

file_paths <- file_paths[!grepl("vocabulary.R", file_paths)]

invisible(lapply(file_paths, source))

items <- readRDS(here("data", "items.rds"))
participants <- readRDS(here("data", "participants.rds"))
responses <- readRDS(here("data", "responses.rds"))
post_summary <- read_csv(here("results", "posterior_summary.csv"))
post_draws <- read_csv(here("results", "posterior_draws.csv"))
post_epreds <- read_csv(here("results", "predictions.csv"))
vocab_data <- readRDS(here("data", "vocab_data.rds"))
vocab_preds <- readRDS(here("results", "vocab_preds.rds"))

theme_set(theme_ggdist())

clrs <- c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ffa600")


options(ggplot2.ordinal.fill = clrs,
        ggplot2.ordinal.colour = clrs,
        ggplot2.discrete.fill = clrs,
        ggplot2.discrete.colour = clrs,
        ggplot2.continuous.fill = scale_color_gradient,
        ggplot2.continuous.colour = scale_color_gradient,
        knitr.graphics.error = FALSE) 
```

## Word acquisition

<br>

- Word learning is **challenging**: variability, ambiguity, etc.

- Earliest evidence of word acquisition: **6 months** of age 

- **Bilingual word acquisition** is more complex: more than one word-form per referent (*gos* &rarr; DOG &larr; *perro*)

- Do bilinguals fall behind? **mixed evidence** on across language pairs: English-French, Catalan-Spanish, etc.

::: {.aside}
@jusczyk1995infants, @bergelson2012months, @hoff2012dual
:::

::: {.notes}
* Leaning words is important, but it's a hard task: ambiguity, variability
* Infants show evidence of word-concept associations from 6 months
* Despite facing a more challenging task, bilinguals do not fall behind
:::

## Linguistic distance

<br>

Bilingual toddlers learning two languages that share more **cognates** show larger vocabulary sizes

::: goal

:::: columns

::::: {.column width="50%"}

**Cognates**
: Form-similar translation equivalents (TEs)

:::::

::::: {.column width="50%"}

| *Cognate*           | *Non-cognate*       |
|:-------------------:|:-------------------:|
| [cat] /ˈgat-ˈgato/  | [dog] /ˈgos-ˈpe.ro/ |

:::::

::::

:::

Cognates are acquired earlier than non-cognates

Bilinguals acquire **TEs** from early steps of vocabulary growth

Why would cognates be acquired earlier?

::: .aside

@floccia2018introduction, @mitchell2022cognates, @bosch2014first, @bilson2015semantic, @tsui2022are

:::

::: {.notes}
- One factor: linguistic or typological distance
- Linguistically more similar languages share more cognates
- Cognates are form-similar translation equivalents
- Children acquire TEs early on: whether cognateness impacts vocabulary growth or not makes a great impact
- Cognates are acquired at earlier ages,. May explain the facilitation of linguistic distance
- But why would cognates be acquired earlier?
:::

## Parallel activation: candidate mechanism?

- Lexical access is **language non-selective**: both languages are co-activated (even in monolingual situations)
- Cross-language activation across translation equivalents
- **Dissociation** between models of bilingual word *processing* and *word acquisition*

```{r parallel}
#| label: parallel
#| echo: false
#| warning: false
#| fig-width: 5
#| fig-align: center
#| fig-height: 1.70
#| out-height: 10%
#| out-width: 40%
tibble(x = c(-1, 1),
       y = c(0, 0),
       word = c("gat", "gato"),
       language = c("Catalan", "Spanish")) |> 
    ggplot(aes(x, y,
               label = word,
               fill = word,
               colour = word)) +
    annotate(geom = "segment",
             x = -0.40,
             xend = 0.40,
             y = 0,
             yend = 0,
             arrow = arrow(ends = "both", 
                           type = "closed"),
             colour = "grey",
             size = 2) +
    geom_point(size = 50,
               shape = 21,
               fill = NA,
               stroke = 3) +
    geom_text(colour = "black",
              size = 6) +
    geom_text(aes(y = 0.75,
                  label = language),
              size = 6) +
    annotate(geom = "text",
             label = "Phonology",
             x = 0,
             y = 0.4,
             hjust = 0.5,
             vjust = 0,
             size = 5) +
    scale_fill_manual(values = c(clrs[1], clrs[4])) +
    scale_colour_manual(values = c(clrs[1], clrs[4])) +
    scale_x_continuous(limits = c(-1.5, 1.5)) +
    scale_y_continuous(limits = c(-1.5 , 1.5)) +
    theme_void() +
    theme(legend.position = "none")
```

::: .aside
@spivey1999cross, @costa2000cognate
:::

::: notes
- We can try to explain this from the language non-selective hypothesis of lexical access
- States that bilinguals activate both languages even in monolingual situations
* The activation of a word in the lexicon may lead to the activation of its translation
- Cognates provide evidence of this
- To data, the cognate facilitation has been embedded in models of word comprehension and production, but not acquisition
- In this study, we provide a theoretical framework for the cognate facilitation on word acquisition, capitalising on accumulator models of language acquisition
:::

## Accumulator models

<br>

Word acquisition as a **continuous process** of **lexical consolidation**: accumulation of word **learning instances**

![](images/accumulator-diagram.png){width="100%" fig-align=center}

::: notes
* Accumulator models devise word acquisition as a continuous process 
* As the child receives language exposure, they encounter word-forms
* Some of those encounters represent learning instances (right referential context)
* Accumulating learning instances with a word, its lexical representation consolidates
* This is reflected in measurable learning outputs
* We are aware that word learning involves more than association. We assume it involves, at least, association
:::

::: .aside
@hidaka2013computational, @mollica2017how
:::

# Simulating word acquisition {background-color="#003f5c"}

# {background-color="#003f5c"}

<div class="highlight">
Simulation 1: **Monolinguals**
</div>

## {transition="none"}

::: columns

:::: {.column width="50%"}

For participant **$i$** and word **$j$**:

::::: goal

$$
\begin{aligned}
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \\
\text{Frequency}_j &\sim \text{Poisson}(\lambda) \\\\
\textbf{For simulations:}~ \lambda &= 50
\end{aligned}
$$

:::::

```{r poisson}
#| label: poisson
#| out-width: 120%
#| out-height: 100%
#| fig-width: 4
#| fig-height: 1.75
data.frame(lambda = 50) %>%
    ggplot(aes(xdist = dist_poisson(lambda))) +
    stat_histinterval(point_interval = NULL,
                      slab_colour = "white",
                      outline_bars = TRUE,
                      fill = "grey50") +
    coord_cartesian(expand = FALSE) +
    labs(title = "Frequency per month\n(Poisson distribution)",
         x = "Learning instances per month",
         y = NULL) +
    scale_x_continuous(breaks = seq(0, 100, 10)) +
    theme_ggdist() +
    theme(axis.text.y = element_blank())
```

::::

:::: {.column width="50%"}

<br>

```{r eli-mon-0}
#| label: eli-mon-0
#| fig-width: 3
#| fig-height: 3
#| out-width: 90%
#| fig-align: center
threshold <- 300

# no parallel activation
eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 1,
    parallel_beta = 0,
    conditions = c(
        glue::glue("/<i style='color:{clrs[1]}'>ˈgat</i>/ [cat]"),
        glue::glue("/<i style='color:{clrs[1]}'>ˈgos</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H0", 
           language=="L1", 
           grepl("gat", item)) |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_wrap(~ te) +
    geom_line(linewidth = 1) +
    labs(x = "Age (months)",
         y = "Cumulative learning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "none", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))

```

::::

:::

::: notes
* LI: function of age and frequency
* Frequency: around 50 times per month, following Poisson distribution
:::


## {transition="none"}

::: columns

:::: {.column width="50%"}

For participant **$i$** and word **$j$**:

::::: goal

$$
\begin{aligned}
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \\
\text{Frequency}_j &\sim \text{Poisson}(\lambda) \\ \\
\textbf{For simulations:}\\
\lambda &= 50 \\
\text{Threshold} &= 300
\end{aligned}
$$


:::::

::::

:::: {.column width="50%"}

<br>


```{r eli-mon-1}
#| label: eli-mon-1
#| fig-width: 3
#| fig-height: 3
#| out-width: 90%
#| fig-align: center
eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_wrap(~ te) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    labs(x = "Age (months)",
         y = "Cumulative learning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "none", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

::::

:::



## {transition="none"}

::: columns

:::: {.column width="50%"}

For participant **$i$** and word **$j$**:

::::: goal

$$
\begin{aligned}
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \\
\text{Frequency}_j &\sim \text{Poisson}(\lambda) \\ \\
\textbf{For simulations:}\\
\lambda &= 50 \\
\text{Threshold} &= 300 \\ \\
\text{Age of Acquisition}_{ij} &= \text{Age}_{i~[\text{Threshold]}}
\end{aligned}
$$


:::::

::::

:::: {.column width="50%"}

<br>

```{r eli-mon-2}
#| label: eli-mon-2
#| fig-width: 3
#| fig-height: 3
#| out-width: 90%
#| fig-align: center
aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H0")


eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_wrap(~ te) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative learning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "none", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

::::

:::

::: notes
* Finally, age of acquisition is the age at which learning instances meet the threshold
* At this age, lexical representation is consolidated and this is observed in learning outputs
:::


## {transition="none"}

::: columns

:::: {.column width="50%"}

For participant **$i$** and word **$j$**:

::::: goal

$$
\begin{aligned}
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \\
\text{Frequency}_j &\sim \text{Poisson}(\lambda) \\ \\
\textbf{For simulations:}\\
\lambda &= 50 \\
\text{Threshold} &= 300 \\ \\
\text{Age of Acquisition}_{ij} &= \text{Age}_{i~[\text{Threshold]}}
\end{aligned}
$$


:::::

::::

:::: {.column width="50%"}

<br>

```{r eli-mon-2}
#| label: eli-mon-3-rep
#| fig-width: 3
#| fig-height: 3
#| out-width: 90%
#| fig-align: center
threshold <- 300 

eli_df_rep <- map_df(
    1:50,
    function(x) {
        # no parallel activation
        generate_eli(
            threshold = threshold,
            age = seq(1, 50, length.out = 100),
            freq_month = 50,
            freq_beta = 1,
            l1_doe = 1,
            parallel_beta = 0,
            conditions = c(
                glue::glue("/<i style='color:{clrs[1]}'>ˈgat</i>/ [cat]"),
                glue::glue("/<i style='color:{clrs[1]}'>ˈgos</i>/ [dog]")
            )
        ) |>
            filter(hypothesis=="H0", 
                   language=="L1", 
                   grepl("gat", item)) |> 
            mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))
    },
    .id = "iteration")


eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_wrap(~ te) +
    geom_line(data = eli_df_rep,
              aes(group = interaction(iteration, language)),
              alpha = 1/5) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80",
               na.rm = TRUE) +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative learning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = "none", 
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

::::

:::

# {background-color="#003f5c"}

<div class="highlight">
Simulation 2: **Bilinguals**

(H0: No parallel activation)
</div>

## {transition="none"}

|                  | Catalan | Spanish |
|:-----------------|:-------:|:-------:|
|Language exposure | 60%     | 40%     |


```{r eli}
#| label: eli-bil-h0
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 0,
    conditions = c(
        glue::glue("**Cognate**<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate**<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H1")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = c(0.75, 0.8), 
          legend.background = element_rect(fill = NA, colour = NA),
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

::: notes
* In the case of bilinguals, we need to consider the dual language exposure
* Bilinguals are exposed to quantitatively less linguistic input in each language
* Will accumulate learning instances more slowly than monolingual
* Here's an example
* Because the child is exposed most of the time to Catalan, they will accumulate learning instances in Catalan faster than in Spanish
* We can see how the child accumulates learning instances for two translation pairs: gat-gato and gos-perro
* The child acquires the Catalan forms earlier than the Spanish forms
:::

## {transition="none"}

|                  | Catalan | Spanish |
|:-----------------|:-------:|:-------:|
|Language exposure | 60%     | 40%     |


```{r eli}
#| label: eli-bil-h0-rep
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
threshold <- 300 

eli_df_rep <- map_df(
    1:50,
    function(x) {
        generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 0,
    conditions = c(
        glue::glue("**Cognate**<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate**<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))
    },
    .id = "iteration")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_line(data = eli_df_rep,
              aes(group = interaction(iteration, language)),
              alpha = 1/5) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = c(0.75, 0.8), 
          legend.background = element_rect(fill = NA, colour = NA),
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

::: notes
* In the case of bilinguals, we need to consider the dual language exposure
* Bilinguals are exposed to quantitatively less linguistic input in each language
* Will accumulate learning instances more slowly than monolingual
* Here's an example
* Because the child is exposed most of the time to Catalan, they will accumulate learning instances in Catalan faster than in Spanish
* We can see how the child accumulates learning instances for two translation pairs: gat-gato and gos-perro
* The child acquires the Catalan forms earlier than the Spanish forms
* The 
:::


# {background-color="#003f5c"}

<div class="highlight">
Simulation 3: **Bilinguals**

(H1: Parallel activation)
</div>

## {transition="none"}

<br>

**Parallel activation hypothesis**
: Word-representations receive learning instances from their translations. This increment in learning instances is proportional to form-similarity (**cognateness**).

::: columns

:::: {.column width="50%"}

**Cognate**

![](images/diagram_cat.png)

::::

:::: {.column width="50%"}

**Non-cognate**

![](images/diagram_dog.png)

::::

:::


---

Including learning instances from **parallel activation**:

* **Hypothesis**: word-representations receive learning instances from their translations

* Proportional to the amount of form-similarity (**cognateness**)


::: goal

$$
\begin{aligned}
\textbf{Monolinguals:} \\
\text{Learning instances}_{ij} &= Age_i \cdot Frequency_j 
\end{aligned}
$$

:::

::: goal

$$
\begin{aligned}
\textbf{Bilinguals:} \\
\text{Learning instances}_{ij} &= \text{Age}_i \cdot \text{Frequency}_j \cdot \text{Exposure}_i+ \\
&(\text{Cognateness}_j \cdot \text{Learning instances}_{ij'})
\end{aligned}
$$

:::


## {transition="none"}

|                  | Catalan | Spanish |
|:-----------------|:-------:|:-------:|
|Language exposure | 60%     | 40%     |


```{r eli}
#| label: eli-bil-h1
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
threshold <- 300

eli_df <- generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 1,
    conditions = c(
        glue::glue("**Cognate**<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate**<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))

aoa_df <- generate_aoa(eli_df, threshold = threshold) |>
    mutate(across(aoa, lst(min, max)), .by = c(te, language)) |>
    filter(hypothesis=="H1")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = c(0.75, 0.8), 
          legend.background = element_rect(fill = NA, colour = NA),
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

## {transition="none"}

|                  | Catalan | Spanish |
|:-----------------|:-------:|:-------:|
|Language exposure | 60%     | 40%     |


```{r eli}
#| label: eli-bil-h1-rep
#| fig-width: 7
#| fig-height: 3.25
#| out-width: 150%
#| out-height: 100%
#| fig-align: center
threshold <- 300 

eli_df_rep <- map_df(
    1:50,
    function(x) {
        generate_eli(
    threshold = threshold,
    age = seq(1, 50, length.out = 100),
    freq_month = 50,
    freq_beta = 1,
    l1_doe = 0.6,
    parallel_beta = 1,
    conditions = c(
        glue::glue("**Cognate**<br>/<i style='color:{clrs[1]}'>ˈgat</i>-<i style='color:{clrs[4]}'>ˈga.to</i>/ [cat]"),
        glue::glue("**Non-cognate**<br>/<i style='color:{clrs[1]}'>ˈgos</i>-<i style='color:{clrs[4]}'>ˈpe.ro</i>/ [dog]")
    )
) |>
    filter(hypothesis=="H1") |> 
    mutate(language = ifelse(language=="L1", "Catalan form", "Spanish form"))
    },
    .id = "iteration")

eli_df |>
    ggplot(aes(age, eli,
               colour = language)) +
    facet_grid(~ te) +
    geom_segment(data = aoa_df,
                 aes(x = aoa,
                     xend = aoa,
                     y = 0,
                     yend = threshold),
                 linewidth = 3/4) +
    geom_line(data = eli_df_rep,
              aes(group = interaction(iteration, language)),
              alpha = 1/5) +
    geom_hline(yintercept = threshold,
               linewidth = 3/4,
               colour = "grey80") +
    annotate(geom = "label",
             label = glue::glue("Threshold: {threshold}"),
             label.r = unit(0, "lines"),
             label.size = 0,
             fill = "grey80",
             x = 0,
             y = threshold,
             size = 2,
             hjust = 0) +
    geom_line(linewidth = 1) +
    geom_label(data = aoa_df,
               aes(x = aoa,
                   y = threshold,
                   label = round(aoa, 2),
                   fill = language),
               size = 3,
               label.r = unit(0, "lines"),
               label.size = 0,
               colour = "white",
               na.rm = TRUE,
               show.legend = FALSE
    ) +
    labs(x = "Age (months)",
         y = "Cumulative\nlearning instances",
         colour = "",
         shape = "Hypothesis",
         fill = "",
         linetype = "Hypothesis") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    scale_x_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 50)) +
    scale_y_continuous(labels = function(x) format(x, big.mark = ","),
                       limits = c(0, 1500)) +
    theme_ggdist() +
    theme(legend.position = c(0.75, 0.8), 
          legend.background = element_rect(fill = NA, colour = NA),
          legend.text = element_text(size = 10),
          legend.key.width = unit(2, "cm"),
          legend.key.height = unit(0.5, "cm"),
          strip.background = element_rect(fill = "grey90", colour = "grey90"),
          strip.text = ggtext::element_markdown(size = 10),
          panel.grid.major.y = element_line(colour = "grey",
                                            linetype = "dotted"),
          plot.background = element_rect(fill = "white",
                                         colour = NA))
```

# Testing hypotheses {background-color="#ffa600"}

<div class="highlight">
Data collection
</div>

## Questionnaire

**Barcelona Vocabulary Questionnaire (BVQ)** 

::: columns

:::: {.column width="75%"}

- On-line, inspired by CDI
- 1,600 words: 800 Catalan and 800 Spanish (sub-lists of 500 words)
- Short-listed `r length(unique(items$te))` (noun) translation pairs

::::

:::: {.column width="25%"}

<a href="https://gongcastro.github.io/bvq"><img src="images/logo.png" align="center" height="125" fig-align="center"/></a>

::::

:::

|      | Understands    | Understands & Says    |
|:-----|:--------------:|:---------------------:|
|chair | [ x ]          | [ &nbsp;  ]           |
|table | [ &nbsp;  ]    | [ &nbsp;  ]           |
| ...  | [ &nbsp;  ]    | [ x ]                 |

::: .aside
@fenson1994variability
:::
## Participants

```{r longitudinal}
lpar <- participants |> 
    count(id, name = "times") |> 
    count(times)
```

::: columns

:::: {.column width=40%}

**`r format(nrow(distinct(responses)), big.mark = ",")` item responses** from **`r nrow(distinct(responses, id))` participants**

::::

:::: {.column width=60%}


| 1 time      | 2 times     | 3 times     | 4 times     |
|:-----------:|:-----------:|:-----------:|:-----------:|
|`r lpar$n[1]`|`r lpar$n[2]`|`r lpar$n[3]`|`r lpar$n[4]`|

::::

:::

<br>

```{r participants-age}
#| label: participants-age
#| echo: false
#| message: false
#| warning: false
#| fig-align: center
#| fig-width: 9
#| fig-height: 3.5
#| out-width: 100%
participants %>% 
    mutate(age = floor(age)) %>% 
    count(age) %>% 
    ggplot() +
    aes(x = age, y = n) +
    geom_col(fill = "grey70") +
    geom_text(aes(label = n), size = 3.5, vjust = -1) +
    labs(
        x = "Age (months)",
        y = "# participants"
    ) +
    scale_x_continuous(breaks = seq(0, 40, 2)) +
    scale_y_continuous(limits = c(0, 55), breaks = seq(0, 55, 10)) +
    theme(
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank()
    ) +
    
    participants %>% 
    mutate(across(starts_with("doe_"), 
                  \(x) cut(x, seq(0, 1, 0.1), include.lowest = TRUE))) |>
    count(doe_catalan) |> 
    ggplot() +
    aes(x = doe_catalan, y = n) +
    geom_col(fill = "grey70") +
    geom_text(aes(label = n), size = 3.5, vjust = -1) +
    labs(x = "Catalan exposure",
         y = "# participants") +
    guides(x = guide_axis(n.dodge = 2)) +
    theme(
        panel.grid.major.x = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.title.y = element_blank()
    ) +
    
    plot_layout(ncol = 2, widths = c(0.55, 0.45))
```

# Testing hypotheses {background-color="#ffa600"}

<div class="highlight">
Modelling and statistical inference
</div>

## Model

<br>

**Ordinal** regression model: $P(Understands)$, $P(Says)$

- *No* < *Understands* < *Understands and Says*

**Multilevel**: Crossed-random effects

- *Participant* and *Translation equivalent* as grouping variables

**Bayesian** (`brms`/Stan): probability of parameter values

$$P(\text{model} | \text{data}) \propto P(\text{data} | \text{model}) \times P(\text{model})$$


---

## Predictors

<br>

- **Age**
- **Length**: number of phonemes
- **Exposure**: lexical frequency $\times$ language exposure
- **Cognateness**: Levenshtein similarity between a word-form and its translation

Two-way and three-way **interactions** between age, exposure, and cognateness

---

```{r regression-coefs}
#| fig-width: 10
#| out-width: 100%
post_summary |>
    mutate(across(.median:.upper,
                  \(x) ifelse(grepl("Intercept", .type), 
                              plogis(x),
                              x/4)),
           hdi = paste0("[", round(.lower, 2), ", ", round(.upper, 2), "]")) |> 
    select(.variable_name, .median, hdi, .rope_overlap) |> 
    knitr::kable(
        col.names = c("Predictor",
                      "Estimate",
                      "95% HDI", 
                      "p(H0)"),
        booktabs = TRUE,
        digits = 3, 
        html_font = "DM+Sans") |> 
    row_spec(9, background = clrs[5],
             hline_after = FALSE) |> 
    row_spec(1:10, font_size = 26) |> 
    pack_rows("Intercepts", 1, 2)  |> 
    pack_rows("Slopes", 3, 10) 
```

## {transition="none"}

```{r predictions}
#| label: predictions-high
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
clrs_reorder <- c("#58508d", "#003f5c", "#122A36", "#ffa600", "#ff6361", "#bc5090")

post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    geom_rect(aes(fill = ifelse(exposure=="High exposure (+1 SD)", TRUE, FALSE),
                  xmin = -Inf,
                  xmax = Inf,
                  ymin = -Inf,
                  ymax = Inf),
              show.legend = FALSE,
              colour = "white") +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_fill_manual(values = c("white", "transparent")) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```

## {transition="none"}


```{r predictions}
#| label: predictions-mean
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
clrs_reorder <- c("#58508d", "#003f5c", "#122A36", "#ffa600", "#ff6361", "#bc5090")

post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    geom_rect(aes(fill = ifelse(exposure=="Low exposure (-1 SD)", FALSE, TRUE),
                  xmin = -Inf,
                  xmax = Inf,
                  ymin = -Inf,
                  ymax = Inf),
              show.legend = FALSE,
              colour = "white") +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_fill_manual(values = c("white", "transparent")) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```

## {transition="none"}

```{r predictions}
#| label: predictions-low
#| out-width: 100%
#| fig-height: 4
#| fig-width: 6
#| fig-align: center
post_epreds |> 
    mutate(age = (age_std * sd(responses$age)) + mean(responses$age),
           exposure = factor(exposure_std,
                             levels = unique(exposure_std),
                             labels = c("Low exposure (-1 SD)",
                                        "Mean exposure",
                                        "High exposure (+1 SD)"),
                             ordered = TRUE),
           lv = factor(lv_std,
                       levels = unique(lv_std),
                       labels = paste0(c(0, 50, 100), "%"),
                       ordered = TRUE),
           .category = ifelse(.category=="Understands",
                              "Comprehension",
                              "Production")) |> 
    ggplot(aes(age, .value, colour = lv)) +
    facet_grid(.category~fct_rev(exposure)) +
    annotate(geom = "rect",
             xmin = min(responses$age),
             xmax = max(responses$age),
             ymin = -Inf,
             ymax = Inf,
             fill = "grey95",
             colour = NA) +
    annotate(geom = "text",
             x = mean(responses$age),
             y = 0,
             hjust = -0.1,
             vjust = 0,
             label = "Observed age range",
             size = 2) +
    geom_vline(xintercept = mean(responses$age), 
               linetype = "dotted") +
    geom_hline(yintercept = 0.5,
               linetype = "dotted") +
    geom_line(aes(group = interaction(lv, .draw)),
              linewidth = 0.5,
              alpha = 1/10) +
    stat_summary(fun = median, geom = "line", linewidth = 0.75) +
    labs(x = "Age (months)",
         y = "Probability of acquisition",
         linetype = "Cognateness (phonological similarity)",
         colour = "Cognateness (phonological similarity)") +
    guides(colour = guide_legend(override.aes = list(linewidth = 2))) +
    scale_colour_manual(values = clrs_reorder[c(4, 5, 1)]) +
    scale_y_continuous(breaks = seq(0, 1, 0.25),
                       limits = c(0, 1)) +
    scale_x_continuous(breaks = seq(0, 50, 5)) +
    theme(legend.position = "top",
          legend.key.size = unit(1, "cm"),
          legend.key.height = unit(1, "cm"),
          axis.text.x = element_text(size = 9),
          panel.grid = element_blank(),
          panel.border = element_rect(fill = NA, 
                                      colour = "black", 
                                      linewidth = 0.75))
```

# Discussion {background-color="#ffa600"}

::: {.incremental}

* **Cognateness facilitates word acquisition**
* Only **low-exposure** words benefit from their cognate status: less dominant language receives more facilitation
* **Parallel activation** as mechanism that boosts lexical consolidation: increment in **cumulative learning instances**
* Next steps: word-learning, formalisation

:::

## {background-color="#bc5090"}
::: {.thanks}
Thanks!
:::

![](images/sap.jpg){.absolute left=0 width="800px"}

![](images/ministerio.png){.absolute bottom=0 left=10 width="200px"}

![](images/icrea.png){.absolute bottom=0 left=220 width="200px"}

![](images/daniela.jpeg){.absolute width="225px" top=50 right=0}

![](images/nacho.jpg){.absolute width="225px" top=300 right=0}

<div position="absolute" bottom=25 left=0>+ participants and families</div>

# Appendix

## Item properties

```{r items}
#| label: items
#| fig-align: center
#| out-width: 100%
#| fig-width: 8
#| fig-height: 5
items |> 
    count(language, n_phon) |> 
    ggplot(aes(n_phon, n,
               fill = language)) +
    geom_col(position = position_dodge()) +
    labs(title = "Number of phonemes",
         fill = "Language") +
    
    items |> 
    count(language, n_syll) |> 
    ggplot(aes(n_syll, n,
               fill = language)) +
    geom_col(position = position_dodge(),
             show.legend = FALSE) +
    labs(title = "Number of syllables",
         fill = "Language") +
    
    items |> 
    ggplot(aes(freq)) +
    stat_slab(show.legend = FALSE,
              fill = "grey60",
              colour = "white") +
    labs(title = "Lexical frequency",
         fill = "Language") +
    
    
    items |>
    distinct(te, lv) |> 
    ggplot(aes(lv)) +
    stat_slab(fill = "grey60",
              colour = "white") +
    labs(title = "Phonological similarity",
         fill = "Language") +
    
    
    plot_layout(nrow = 2, guides = "keep") &
    scale_fill_manual(values = clrs[c(1, 4)]) &
    theme(legend.position = "top",
          axis.title.x = element_blank(),
          axis.title.y = element_blank(),
          axis.text.y = element_blank())
```

## Levenshtein similarity

**Levenshtein distance**: number of edits for two character strings to become identical

|         	| Orthography 	| Phonology 	| String 	|
|---------	|-------------	|-----------	|--------	|
| Catalan 	| *porta*      	| /ˈpɔɾ.tə/    	| `pɔɾtə`  	|
| Spanish 	| *puerta*     	| /ˈpweɾ.ta/   	| `pweɾta` 	|

## Levenshtein similarity

$$
1-\frac{lev(A, B)}{Max(length(A), length(B))}
$$
<br> 

| Catalan 	              | Spanish   	            | Levenshtein 	    |       
|---------	              |---------	            |-----	            |
| porta (/ˈpɔɾ.tə/)  	  | puerta (/ˈpweɾ.ta/)     |   0.50 (3)  	    |
| taula (/ˈtaw.lə/)       | mesa* (/ˈmesa/)         |   0.00 (5)    	|
| cotxe (/ˈkɔ.t͡ʃə/)	  | coche (/ˈkot͡ʃe/)  	    |  0.40 (3)  	    | 
| ...     	              | ...     	            | ... 	            |


## Vocabulary 

```{r vocab-preds}
#| label: vocab-preds
#| fig-width: 6
#| out-width: 90%
#| fig-height: 4
vocab_data_tmp <- vocab_data |> 
    rename(Total = "total_count",
           L1 = "l1_count") |> 
    pivot_longer(c(Total, L1),
                 names_to = ".type",
                 values_to = ".value")

ggplot(vocab_preds, aes(age, .epred,
                        colour = lp, fill = lp)) +
    facet_wrap(~.type) +
    geom_point(data = vocab_data_tmp,
               aes(y = .value),
               alpha = 1/5) +
    stat_summary(fun = mean,
                 geom = "line",
                 linewidth = 1) +
    labs(x = "Age (months)",
         y = "Vocabulary size") +
    scale_colour_manual(values = clrs[c(1, 4)]) +
    scale_fill_manual(values = clrs[c(1, 4)]) +
    theme(legend.position = c(0.1, 0.9),
          legend.justification = "left",
          legend.title = element_blank(),
          legend.background = element_rect(colour = NA,
                                           fill = NA))
```

## References

::: {#refs}
:::


